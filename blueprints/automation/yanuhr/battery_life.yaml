blueprint:
  name: Sledovanie bat√©ri√≠ s denn√Ωm upozornen√≠m a pam√§≈•ou
  description: Sleduje bat√©riov√© entity, upozor≈àuje pri poklese pod 15‚ÄØ% a posiela denn√© pripomienky, k√Ωm sa bat√©ria nezv√Ω≈°i.
  domain: automation
  input:
    check_time:
      name: ƒåas upozornenia
      description: Kedy sa m√° denne kontrolova≈• stav bat√©ri√≠
      default: "08:00:00"
      selector:
        time: {}
    monitored_batteries:
      name: Sledovan√© bat√©rie
      description: Vyber entity, ktor√© chce≈° sledova≈•
      selector:
        entity:
          domain: sensor
          multiple: true
    memory_helper:
      name: Pam√§≈• upozornen√≠
      description: input_text pomocn√≠k na uchovanie ent√≠t, ktor√© maj√∫ akt√≠vne upozornenie
      selector:
        entity:
          domain: input_text
    notification_service:
      name: Notifikaƒçn√° slu≈æba
      description: Napr. notify.mobile_app_iphone alebo notify.telegram
      default: notify.persistent_notification
      selector:
        text: {}

mode: single

trigger:
  - platform: time
    at: !input check_time

variables:
  notify_service: !input notification_service
  monitored_batteries: !input monitored_batteries
  memory_helper: !input memory_helper
  low_threshold: 15

action:
  - variables:
      notified_entities: >-
        {% set raw = states(memory_helper) %}
        {% if raw and raw != 'unknown' %}
          {{ raw | from_json }}
        {% else %}
          []
        {% endif %}
  - repeat:
      for_each: "{{ monitored_batteries }}"
      sequence:
        - variables:
            battery_entity: "{{ repeat.item }}"
            battery_level: "{{ states(battery_entity) | float(default=100) }}"
        - choose:
            # RESET: Bat√©ria st√∫pla nad 15 % ‚Üí odstr√°ni≈• zo zoznamu
            - conditions:
                - condition: template
                  value_template: "{{ battery_level >= low_threshold and battery_entity in notified_entities }}"
              sequence:
                - service: input_text.set_value
                  data:
                    entity_id: !input memory_helper
                    value: >-
                      {{ (notified_entities | reject('equalto', battery_entity) | list) | to_json }}

            # NOTIFIK√ÅCIA: Bat√©ria pod 15 % ‚Äì po≈°li ka≈æd√Ω de≈à, k√Ωm sa nezv√Ω≈°i
            - conditions:
                - condition: template
                  value_template: "{{ battery_level < low_threshold }}"
              sequence:
                - service: "{{ notify_service }}"
                  data:
                    title: "üîã N√≠zka bat√©ria"
                    message: >
                      Senzor {{ state_attr(battery_entity, 'friendly_name') or battery_entity }}
                      m√° iba {{ battery_level | int }} % bat√©rie.
                - service: input_text.set_value
                  data:
                    entity_id: !input memory_helper
                    value: >-
                      {{ (notified_entities + [battery_entity]) | unique | to_json }}

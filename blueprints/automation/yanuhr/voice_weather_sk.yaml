blueprint:
  name: Weather Voice Assistant (Slovak)
  description: "Voice assistant blueprint for weather announcements in Slovak language"
  domain: automation
  input:
    weather_entity:
      name: Weather Entity
      description: "The weather entity to get forecast from"
      default: weather.forecast_domov
      selector:
        entity:
          domain: weather
    voice_entities:
      name: Voice Entities
      description: "List of voice entities to use for announcements"
      selector:
        entity:
          domain: assist_satellite
          multiple: true

trigger:
  - platform: conversation
    command:
      - aké je počasie
      - ako je vonku
      - aké je počasie vonku
      - aké je vonku počasie
      - aká je predpoveď počasia
      - aké bude počasie
      - aké dnes bude počasie

action:
  - variables:
      condition_mapping: >
        {% set mapping = {
          'sunny': 'slnečno',
          'partlycloudy': 'čiastočne oblačno',
          'cloudy': 'zamračené',
          'rainy': 'daždivo',
          'snowy': 'sneženie',
          'snowy-rainy': 'dážď so snehom',
          'windy': 'veterno',
          'fog': 'hmla',
          'hail': 'krupobitie',
          'lightning': 'búrka',
          'lightning-rainy': 'búrka s dažďom',
          'clear-night': 'jasná noc',
          'partlycloudy-night': 'čiastočne oblačná noc',
          'overcast': 'zamračené',
          'drizzle': 'mrholenie',
          'scattered-showers': 'prehánky',
          'isolated-thunderstorms': 'izolované búrky',
          'thunderstorms': 'búrky',
          'severe-thunderstorms': 'silné búrky',
          'tornado': 'tornádo',
          'hurricane': 'hurikán',
          'tropical-storm': 'tropická búrka',
          'dust': 'prašan',
          'sand': 'piesok',
          'ash': 'popol',
          'sleet': 'ľadovec',
          'blizzard': 'snehová búrka'
        } %}
        {{ mapping }}
      matched_entity: >
        {% set entities = states | selectattr('entity_id', 'search', 'assist_satellite.*') | map(attribute='entity_id') | list %}
        {% set matched_entity = entities | select('is_state', 'processing') | list | first %}
        {{ matched_entity }}
      final_message: >
        {% set message = [] %}
        {% set weather = states(weather_entity) %}
        {% set forecast = state_attr(weather_entity, 'forecast') %}
        {% set current_temp = state_attr(weather_entity, 'temperature') %}
        {% set wind_speed = state_attr(weather_entity, 'wind_speed') %}
        {% set condition_translated = condition_mapping.get(weather, 'neznáme') %}

        {% do message.append('Aktuálna predpoveď počasia predpokladá, že bude ' ~ condition_translated ~ '.') %}

        {% if current_temp is not none %}
          {% do message.append('Aktuálna teplota je ' ~ current_temp ~ ' stupňov.') %}
        {% endif %}

        {% if wind_speed is not none %}
          {% do message.append('Rýchlosť vetra je ' ~ wind_speed ~ ' kilometrov za hodinu.') %}
        {% endif %}

        {% if forecast is not none %}
          {% set now_ts = as_timestamp(now()) %}
          {% set forecast_24h = [] %}
          {% for entry in forecast %}
            {% if entry.datetime is defined and entry.datetime != '' %}
              {% set entry_ts = as_timestamp(as_datetime(entry.datetime)) %}
              {% if entry_ts <= now_ts + 86400 %}
                {% set _ = forecast_24h.append(entry) %}
              {% endif %}
            {% endif %}
          {% endfor %}
          
          {% if forecast_24h | length > 0 %}
            {% set min_temp = forecast_24h | map(attribute='temperature') | min %}
            {% set max_temp = forecast_24h | map(attribute='temperature') | max %}
            {% set min_temp_entry = forecast_24h | selectattr('temperature', 'eq', min_temp) | first %}
            {% set max_temp_entry = forecast_24h | selectattr('temperature', 'eq', max_temp) | first %}
            
            {% if min_temp is not none %}
              {% do message.append('Najnižšia teplota bude ' ~ min_temp ~ ' stupňov.') %}
              {% if min_temp_entry %}
                {% set formatted_time = as_datetime(min_temp_entry.datetime).strftime('%d.%m. o %H:%M') %}
                {% do message.append('Najnižšia teplota sa očakáva ' ~ formatted_time ~ '.') %}
              {% endif %}
            {% endif %}
            
            {% if max_temp is not none %}
              {% do message.append('Najvyššia teplota bude ' ~ max_temp ~ ' stupňov.') %}
              {% if max_temp_entry %}
                {% set formatted_time = as_datetime(max_temp_entry.datetime).strftime('%d.%m. o %H:%M') %}
                {% do message.append('Najvyššia teplota sa očakáva ' ~ formatted_time ~ '.') %}
              {% endif %}
            {% endif %}
            
            {% set precipitation_entries = forecast_24h | selectattr('precipitation', 'gt', 0) | list %}
            {% if precipitation_entries | length > 0 %}
              {% set first_precip = precipitation_entries | first %}
              {% set last_precip = precipitation_entries | last %}
              {% set total_precip = precipitation_entries | sum(attribute='precipitation') | round(1) %}
              
              {% if first_precip and last_precip %}
                {% set start_time = as_datetime(first_precip.datetime).strftime('%d.%m. o %H:%M') %}
                {% set end_time = as_datetime(last_precip.datetime).strftime('%d.%m. o %H:%M') %}
                {% do message.append('Zrážky sa očakávajú od ' ~ start_time ~ ' do ' ~ end_time ~ '.') %}
              {% endif %}
              {% if total_precip > 0 %}
                {% do message.append('Celkové množstvo zrážok bude ' ~ total_precip ~ ' milimetrov.') %}
              {% endif %}
            {% else %}
              {% do message.append('Žiadne zrážky sa neočakávajú.') %}
            {% endif %}
          {% endif %}
        {% else %}
          {% do message.append('Predpoveď počasia nie je momentálne dostupná.') %}
        {% endif %}
        {{ message | join(' ') }}
  - if: "{{ matched_entity != '' }}"
    then:
      - service: assist_satellite.announce
        target:
          entity_id: "{{ matched_entity }}"
        data:
          message: "{{ final_message }}"

mode: single
